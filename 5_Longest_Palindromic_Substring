class Solution {
public:
    string longestPalindrome(string s) {
        int m[s.length()][s.length()] = {0};
        int longest = 1;
        int maxi = 0;
        for(int i=0; i<s.length()-1; i++)
        {
            m[i][i] = 1;
            if(s[i] == s[i+1])
            {
                longest = 2;
                m[i][i+1] = 1;
                maxi = i;
            }
        }
        m[s.length()-1][s.length()-1] = 1;
        for(int j = 2; j<s.length(); j++)
            for(int i=0; i<j-1; i++)
            {
                if((s[i] == s[j]) && (m[i+1][j-1]))
                {
                    m[i][j] = 1;
                    if(longest<(j-i+1))
                    {
                        longest = j-i+1;
                        maxi = i;
                    }
                }
            }
        return s.substr(maxi, longest);
    }
};
